function [y1] = net4(x1)
%NET4 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Jan-2021 21:41:10.
% 
% [y1] = net4(x1) takes these arguments:
%   x = 1xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 1.37;
x1_step1.gain = 0.217155266015201;
x1_step1.ymin = -1;

% Layer 1
b1 = [14.042706703141538682;-11.030998606659002448;7.7067530310522220915;-4.7207209574639694694;1.5039085997208681;-0.78190855731025710185;11.857296350068802226;14.832430434013906151;-6.7718733309290222167;-15.128099982428418357];
IW1_1 = [-13.939515100030337891;13.871763402661432707;-14.036812752482394018;13.978803062035630944;-13.994949968941066132;-14.152218334550367373;25.461762113711330358;33.462067056836410472;-16.517656588945371254;-12.885571904220082473];

% Layer 2
b2 = 0.044036713674974664601;
LW2_1 = [0.00010204257942107906551 2.6037954410258891375e-05 3.3036699146693542179e-05 0.00013152810742248790231 0.00049634847198620356441 -0.001681231035964536949 -0.72640495579868757936 1.6561407258476432691 -0.069407950792600092704 0.044557445803892946345];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
