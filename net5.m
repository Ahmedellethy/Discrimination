function [y1] = net5(x1)
%NET5 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Jan-2021 21:41:25.
% 
% [y1] = net5(x1) takes these arguments:
%   x = 1xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 1.04;
x1_step1.gain = 1.13636363636364;
x1_step1.ymin = -1;

% Layer 1
b1 = [13.964694380826749409;-10.914151009612673704;-7.7813543496957153778;-4.670481927545673706;1.5662620555264166189;1.3059371269415251948;-47.427345173217673846;-57.122065451594338015;-38.079576828034760183;39.126121665420527052];
IW1_1 = [-14.071253772475067478;13.97979611725610205;14.007632752286101052;14.002750743442128112;-13.984993301567822499;13.62575583064249507;-104.44075409079427175;-125.6306935120216508;-47.99861242609289036;37.701291695627539013];

% Layer 2
b2 = 3.0394682433550066492;
LW2_1 = [-8.962960679267779909e-06 -1.3462054770650811277e-06 2.4141446757487109061e-07 1.1244442435108178979e-07 2.5399286644537917915e-06 -0.00012687570522070370019 -5.6841845412614375732 6.1691294927117832358 0.030995147420056934351 -3.5233910022080370261];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.079968012794882;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
